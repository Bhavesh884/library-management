/*
 * To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newlibrarymanagementsystem;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhavesh
 */
public class MenuFrame extends javax.swing.JFrame {
    
    String LoggedInUserName; //global variables
    String LoggedInPassword;

    AllBooksFram abfobj;
    IssuesFrame isfobj;
    RegisteredStudentsFrame rsfobj;
    EventLogFrame elfobj;
    Font secqCBfont;
    Font normalfont;

public void booksrefresh(){
if(abfobj!=null)
    abfobj.refresh();
}    
    
public void evlrefresh(){
    if(elfobj!=null)
elfobj.refresh();
}

public void issuesrefresh(){
if(isfobj!=null){
    isfobj.refresh();
    isfobj.issuelogsrefresh();
}
}
    
public void framesfoclose(){
    this.setEnabled(false);
if(abfobj!=null)
    abfobj.foclose();
if(isfobj!=null)
    isfobj.foclose();
if(rsfobj!=null)
    rsfobj.setEnabled(false);
if(elfobj!=null)
    elfobj.setEnabled(false);
}
public void framesfocback(){
    this.setEnabled(true);
if(abfobj!=null)
    abfobj.focback();
if(isfobj!=null)
    isfobj.focback();
if(rsfobj!=null)
    rsfobj.setEnabled(true);
if(elfobj!=null)
    elfobj.setEnabled(true);
}
    /**
     * Creates new form MenuFrame
     */
    public MenuFrame(String uname, String pwd) {
        initComponents();
        this.LoggedInUserName = uname;
        this.LoggedInPassword = pwd;
        ManageAccountsTbl.setDefaultEditor(Object.class, null);
        secqCBfont = secqCB.getFont();
        normalfont = SampLbl.getFont();
        secqCB.setFont(normalfont);
        UserNameDisplayLbl.setText(LoggedInUserName);
    }
    
    public void MArefresh(){
    RemoveAccountBtn.setEnabled(false);
    boolean dcheck = DCheck.isSelected();
    String query = "SELECT uname,name,deleted FROM accounts "+(dcheck ? "" : "WHERE deleted = \'N\' ")+";" ;
    DefaultTableModel model = (DefaultTableModel)ManageAccountsTbl.getModel();
    int rows = model.getRowCount();
    if(rows!=0)
        for(int i=0 ; i<rows ; i++)
            model.removeRow(0);
    try{
    Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/newlibman";
            Connection c=DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) c.createStatement();
    ResultSet rs = stmt.executeQuery(query);
    Object[] tuple = new Object[3];
    while(rs.next()){
    for(int i=1 ; i<=3; i++)
    tuple[i-1] = rs.getObject(i);
    model.addRow(tuple);
    }
    rs.close();
    stmt.close();
    c.close();
    }
    catch(Exception e){
        System.out.println(e);
    }
    }
    
    public void AddAccountDialogReset(){
    nameTF.setText("");
    unameTF.setText("");
    pwdPF.setText("");
    cpwdPF.setText("");
    nameTF.requestFocus();
    secqCB.setSelectedIndex(0);
    secqLbl.setText("31/100");
    secansTF.setText("");
    nameTF.setBackground(Color.pink);
    unameTF.setBackground(Color.pink);
    pwdPF.setBackground(Color.pink);
    cpwdPF.setBackground(Color.pink);
    secqCB.setFont(normalfont);
    secansTF.setBackground(Color.pink);
    AddAccountDoneBtn.setEnabled(false);
    }
    
    public void ManageAccountsDialogReset(){
    ManageAccountsTbl.clearSelection();
    }

    public void ClearDataDialogReset(){
    AllInactiveLogsRB.setSelected(true);
    }
    
    public void ChangePasswordDialogReset(){
    opwdPF.setText("");
    npwdPF.setText("");
    cnpwdPF.setText("");
    nsecqTF.setText("");
    nsecansTF.setText("");
    opwdPF.setBackground(Color.pink);
    npwdPF.setBackground(Color.pink);
    cnpwdPF.setBackground(Color.pink);
    nsecqTF.setBackground(Color.pink);
    nsecansTF.setBackground(Color.pink);
    ChangePasswordDoneBtn.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SettingsDialog = new javax.swing.JDialog();
        ChangePasswordBtn = new javax.swing.JButton();
        ManageAccountsBtn = new javax.swing.JButton();
        ClearDataBtn = new javax.swing.JButton();
        AboutBtn = new javax.swing.JButton();
        ClearDataDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        ClearDataDoneBtn = new javax.swing.JButton();
        OlderThanDC = new datechooser.beans.DateChooserCombo();
        EventLogRB = new javax.swing.JRadioButton();
        AllInactiveLogsRB = new javax.swing.JRadioButton();
        ResetDatabaseRB = new javax.swing.JRadioButton();
        ChangePasswordDialog = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ChangePasswordDoneBtn = new javax.swing.JButton();
        opwdLbl = new javax.swing.JLabel();
        npwdLbl = new javax.swing.JLabel();
        cnpwdLbl = new javax.swing.JLabel();
        cnpwdPF = new javax.swing.JPasswordField();
        npwdPF = new javax.swing.JPasswordField();
        opwdPF = new javax.swing.JPasswordField();
        nsecansTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nsecqTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        nsecqLbl = new javax.swing.JLabel();
        nsecansLbl = new javax.swing.JLabel();
        ManageAccountsDialog = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        ManageAccountsTbl = new javax.swing.JTable();
        RemoveAccountBtn = new javax.swing.JButton();
        AddAccountBtn = new javax.swing.JButton();
        DCheck = new javax.swing.JCheckBox();
        AddAccountDialog = new javax.swing.JDialog();
        AddAccountDoneBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        nameTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        unameTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cpwdPF = new javax.swing.JPasswordField();
        pwdPF = new javax.swing.JPasswordField();
        SampLbl = new javax.swing.JLabel();
        secqCB = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        secansTF = new javax.swing.JTextField();
        unameLbl = new javax.swing.JLabel();
        pwdLbl = new javax.swing.JLabel();
        cpwdLbl = new javax.swing.JLabel();
        secqLbl = new javax.swing.JLabel();
        secansLbl = new javax.swing.JLabel();
        ClearDataButtonGrp = new javax.swing.ButtonGroup();
        AboutDialog = new javax.swing.JDialog();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        LogOutBtn = new javax.swing.JButton();
        RegisteredStudentsBtn = new javax.swing.JButton();
        EventLogBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        SettingsBtn = new javax.swing.JButton();
        IssuesBtn = new javax.swing.JButton();
        AllBooksBtn = new javax.swing.JButton();
        UserNameDisplayLbl = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        SettingsDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        SettingsDialog.setTitle("Settings");
        SettingsDialog.setAlwaysOnTop(true);
        SettingsDialog.setLocation(new java.awt.Point(450, 125));
        SettingsDialog.setResizable(false);
        SettingsDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                SettingsDialogWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                SettingsDialogWindowOpened(evt);
            }
        });

        ChangePasswordBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ChangePasswordBtn.setText("Change Password");
        ChangePasswordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePasswordBtnActionPerformed(evt);
            }
        });

        ManageAccountsBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ManageAccountsBtn.setText("Manage Accounts");
        ManageAccountsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageAccountsBtnActionPerformed(evt);
            }
        });

        ClearDataBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ClearDataBtn.setText("Clear Data");
        ClearDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDataBtnActionPerformed(evt);
            }
        });

        AboutBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AboutBtn.setText("About");
        AboutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SettingsDialogLayout = new javax.swing.GroupLayout(SettingsDialog.getContentPane());
        SettingsDialog.getContentPane().setLayout(SettingsDialogLayout);
        SettingsDialogLayout.setHorizontalGroup(
            SettingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SettingsDialogLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(SettingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SettingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ChangePasswordBtn)
                        .addGroup(SettingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ClearDataBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ManageAccountsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(SettingsDialogLayout.createSequentialGroup()
                        .addComponent(AboutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGap(61, 61, 61))
        );
        SettingsDialogLayout.setVerticalGroup(
            SettingsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsDialogLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(ChangePasswordBtn)
                .addGap(18, 18, 18)
                .addComponent(ManageAccountsBtn)
                .addGap(18, 18, 18)
                .addComponent(ClearDataBtn)
                .addGap(18, 18, 18)
                .addComponent(AboutBtn)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        ClearDataDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ClearDataDialog.setTitle("Clear Data");
        ClearDataDialog.setLocation(new java.awt.Point(450, 125));
        ClearDataDialog.setResizable(false);
        ClearDataDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                ClearDataDialogWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ClearDataDialogWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                ClearDataDialogWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Older than-");

        ClearDataDoneBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ClearDataDoneBtn.setText("Done");
        ClearDataDoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDataDoneBtnActionPerformed(evt);
            }
        });

        OlderThanDC.setCalendarPreferredSize(new java.awt.Dimension(336, 228));
        OlderThanDC.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 14));

        ClearDataButtonGrp.add(EventLogRB);
        EventLogRB.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        EventLogRB.setText("Event log");
        EventLogRB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                EventLogRBItemStateChanged(evt);
            }
        });

        ClearDataButtonGrp.add(AllInactiveLogsRB);
        AllInactiveLogsRB.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AllInactiveLogsRB.setSelected(true);
        AllInactiveLogsRB.setText("All inactive logs");
        AllInactiveLogsRB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AllInactiveLogsRBItemStateChanged(evt);
            }
        });

        ClearDataButtonGrp.add(ResetDatabaseRB);
        ResetDatabaseRB.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ResetDatabaseRB.setText("Reset database");
        ResetDatabaseRB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ResetDatabaseRBItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout ClearDataDialogLayout = new javax.swing.GroupLayout(ClearDataDialog.getContentPane());
        ClearDataDialog.getContentPane().setLayout(ClearDataDialogLayout);
        ClearDataDialogLayout.setHorizontalGroup(
            ClearDataDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClearDataDialogLayout.createSequentialGroup()
                .addGroup(ClearDataDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClearDataDialogLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(ClearDataDoneBtn))
                    .addGroup(ClearDataDialogLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OlderThanDC, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ClearDataDialogLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(ClearDataDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AllInactiveLogsRB)
                            .addComponent(ResetDatabaseRB)
                            .addComponent(EventLogRB, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        ClearDataDialogLayout.setVerticalGroup(
            ClearDataDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClearDataDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(EventLogRB)
                .addGap(35, 35, 35)
                .addComponent(AllInactiveLogsRB)
                .addGap(44, 44, 44)
                .addComponent(ResetDatabaseRB)
                .addGap(53, 53, 53)
                .addGroup(ClearDataDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(OlderThanDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(ClearDataDoneBtn)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        ChangePasswordDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ChangePasswordDialog.setTitle("Change Password");
        ChangePasswordDialog.setLocation(new java.awt.Point(450, 125));
        ChangePasswordDialog.setResizable(false);
        ChangePasswordDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                ChangePasswordDialogWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ChangePasswordDialogWindowClosing(evt);
            }
        });

        jLabel2.setText("Enter Current password-");

        jLabel3.setText("Enter New Password-");

        jLabel4.setText("Confirm New Password-");

        ChangePasswordDoneBtn.setText("Done");
        ChangePasswordDoneBtn.setEnabled(false);
        ChangePasswordDoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePasswordDoneBtnActionPerformed(evt);
            }
        });

        opwdLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        opwdLbl.setText("0/45");

        npwdLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        npwdLbl.setText("0/45");

        cnpwdLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cnpwdLbl.setText("0/45");

        cnpwdPF.setBackground(java.awt.Color.pink);
        cnpwdPF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                cnpwdPFCaretUpdate(evt);
            }
        });
        cnpwdPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cnpwdPFKeyAll(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cnpwdPFKeyAll(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cnpwdPFKeyAll(evt);
            }
        });

        npwdPF.setBackground(java.awt.Color.pink);
        npwdPF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                npwdPFCaretUpdate(evt);
            }
        });
        npwdPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                npwdPFKeyAll(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                npwdPFKeyAll(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                npwdPFKeyAll(evt);
            }
        });

        opwdPF.setBackground(java.awt.Color.pink);
        opwdPF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                opwdPFCaretUpdate(evt);
            }
        });
        opwdPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                opwdPFKeyAll(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                opwdPFKeyAll(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                opwdPFKeyAll(evt);
            }
        });

        nsecansTF.setBackground(java.awt.Color.pink);
        nsecansTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nsecansTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                nsecansTFCaretUpdate(evt);
            }
        });
        nsecansTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nsecansTFKeyAll(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nsecansTFKeyAll(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nsecansTFKeyAll(evt);
            }
        });

        jLabel5.setText("Answer-");

        nsecqTF.setBackground(java.awt.Color.pink);
        nsecqTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nsecqTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                nsecqTFCaretUpdate(evt);
            }
        });
        nsecqTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nsecqTFKeyAll(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nsecqTFKeyAll(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nsecqTFKeyAll(evt);
            }
        });

        jLabel10.setText("New security question-");

        nsecqLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        nsecqLbl.setText("0/100");

        nsecansLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        nsecansLbl.setText("0/100");

        javax.swing.GroupLayout ChangePasswordDialogLayout = new javax.swing.GroupLayout(ChangePasswordDialog.getContentPane());
        ChangePasswordDialog.getContentPane().setLayout(ChangePasswordDialogLayout);
        ChangePasswordDialogLayout.setHorizontalGroup(
            ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordDialogLayout.createSequentialGroup()
                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChangePasswordDialogLayout.createSequentialGroup()
                        .addGap(421, 511, Short.MAX_VALUE)
                        .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(npwdLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(opwdLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cnpwdLbl, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(ChangePasswordDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nsecqTF, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ChangePasswordDialogLayout.createSequentialGroup()
                                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(ChangePasswordDialogLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18))
                                    .addGroup(ChangePasswordDialogLayout.createSequentialGroup()
                                        .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)))
                                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cnpwdPF, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(npwdPF, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(opwdPF, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(nsecansTF)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChangePasswordDialogLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nsecansLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChangePasswordDialogLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(215, 215, 215)
                                        .addComponent(nsecqLbl)))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChangePasswordDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ChangePasswordDoneBtn)
                .addGap(240, 240, 240))
            .addGroup(ChangePasswordDialogLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ChangePasswordDialogLayout.setVerticalGroup(
            ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChangePasswordDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(opwdPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opwdLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(npwdPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(npwdLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cnpwdPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cnpwdLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nsecqTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ChangePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nsecqLbl)
                    .addComponent(jLabel5))
                .addGap(7, 7, 7)
                .addComponent(nsecansTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(nsecansLbl)
                .addGap(2, 2, 2)
                .addComponent(ChangePasswordDoneBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ManageAccountsDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ManageAccountsDialog.setTitle("Manage Accounts");
        ManageAccountsDialog.setResizable(false);
        ManageAccountsDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                ManageAccountsDialogWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                ManageAccountsDialogWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                ManageAccountsDialogWindowOpened(evt);
            }
        });

        ManageAccountsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserName", "Name", "Deleted"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ManageAccountsTbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ManageAccountsTbl.setSelectionBackground(new java.awt.Color(255, 204, 204));
        ManageAccountsTbl.setSelectionForeground(new java.awt.Color(0, 0, 0));
        ManageAccountsTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ManageAccountsTbl.getTableHeader().setReorderingAllowed(false);
        ManageAccountsTbl.setCellSelectionEnabled(true);
        ManageAccountsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ManageAccountsTblMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(ManageAccountsTbl);
        if (ManageAccountsTbl.getColumnModel().getColumnCount() > 0) {
            ManageAccountsTbl.getColumnModel().getColumn(0).setPreferredWidth(300);
            ManageAccountsTbl.getColumnModel().getColumn(1).setPreferredWidth(300);
            ManageAccountsTbl.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        RemoveAccountBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        RemoveAccountBtn.setText("Delete Account");
        RemoveAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveAccountBtnActionPerformed(evt);
            }
        });

        AddAccountBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AddAccountBtn.setText("Add New Account");
        AddAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAccountBtnActionPerformed(evt);
            }
        });

        DCheck.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DCheck.setText("Show deleted");
        DCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DCheckItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout ManageAccountsDialogLayout = new javax.swing.GroupLayout(ManageAccountsDialog.getContentPane());
        ManageAccountsDialog.getContentPane().setLayout(ManageAccountsDialogLayout);
        ManageAccountsDialogLayout.setHorizontalGroup(
            ManageAccountsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageAccountsDialogLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(AddAccountBtn)
                .addGap(49, 49, 49)
                .addComponent(RemoveAccountBtn)
                .addGap(42, 42, 42)
                .addComponent(DCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ManageAccountsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                .addContainerGap())
        );
        ManageAccountsDialogLayout.setVerticalGroup(
            ManageAccountsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageAccountsDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(ManageAccountsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddAccountBtn)
                    .addComponent(RemoveAccountBtn)
                    .addComponent(DCheck))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );

        AddAccountDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AddAccountDialog.setTitle("Add New Account");
        AddAccountDialog.setLocation(new java.awt.Point(450, 125));
        AddAccountDialog.setResizable(false);
        AddAccountDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                AddAccountDialogWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                AddAccountDialogWindowClosing(evt);
            }
        });

        AddAccountDoneBtn.setBackground(new java.awt.Color(0, 204, 204));
        AddAccountDoneBtn.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        AddAccountDoneBtn.setForeground(new java.awt.Color(51, 51, 51));
        AddAccountDoneBtn.setText("Done");
        AddAccountDoneBtn.setEnabled(false);
        AddAccountDoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAccountDoneBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Enter Account Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        nameTF.setBackground(java.awt.Color.pink);
        nameTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        nameTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                nameTFCaretUpdate(evt);
            }
        });
        nameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTFKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel7.setText("Username-");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setText("Name-");

        unameTF.setBackground(java.awt.Color.pink);
        unameTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        unameTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                unameTFCaretUpdate(evt);
            }
        });
        unameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                unameTFKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel8.setText("Password-");

        cpwdPF.setBackground(java.awt.Color.pink);
        cpwdPF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        cpwdPF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                cpwdPFCaretUpdate(evt);
            }
        });
        cpwdPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cpwdPFKeyReleased(evt);
            }
        });

        pwdPF.setBackground(java.awt.Color.pink);
        pwdPF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        pwdPF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                pwdPFCaretUpdate(evt);
            }
        });
        pwdPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pwdPFKeyReleased(evt);
            }
        });

        SampLbl.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        SampLbl.setText("Answer-");

        secqCB.setEditable(true);
        secqCB.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        secqCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "What is your favourite colour ?", "What is your nickname ?", "Your bestie name ?" }));
        secqCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                secqCBItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel11.setText("Confirm password-");

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel9.setText("Security question-");

        nameLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        nameLbl.setText("0/45");

        secansTF.setBackground(java.awt.Color.pink);
        secansTF.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        secansTF.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                secansTFCaretUpdate(evt);
            }
        });
        secansTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                secansTFKeyReleased(evt);
            }
        });

        unameLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        unameLbl.setText("0/45");

        pwdLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        pwdLbl.setText("0/45");

        cpwdLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cpwdLbl.setText("0/45");

        secqLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        secqLbl.setText("31/100");

        secansLbl.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        secansLbl.setText("0/100");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTF)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nameLbl)
                                    .addComponent(unameLbl)))
                            .addComponent(unameTF)
                            .addComponent(pwdPF)
                            .addComponent(cpwdPF)
                            .addComponent(secqCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(secansTF)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(SampLbl, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(513, 513, 513))
                            .addComponent(secqLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(secansLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cpwdLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pwdLbl, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pwdPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameLbl)
                        .addGap(31, 31, 31)
                        .addComponent(unameLbl)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pwdLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpwdPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpwdLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(secqCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secqLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SampLbl)
                    .addComponent(secansTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secansLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddAccountDialogLayout = new javax.swing.GroupLayout(AddAccountDialog.getContentPane());
        AddAccountDialog.getContentPane().setLayout(AddAccountDialogLayout);
        AddAccountDialogLayout.setHorizontalGroup(
            AddAccountDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAccountDialogLayout.createSequentialGroup()
                .addGroup(AddAccountDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddAccountDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddAccountDialogLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(AddAccountDoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        AddAccountDialogLayout.setVerticalGroup(
            AddAccountDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAccountDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddAccountDoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AboutDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AboutDialog.setTitle("About");
        AboutDialog.setBackground(new java.awt.Color(0, 0, 153));
        AboutDialog.setModal(true);
        AboutDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                AboutDialogWindowClosing(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("--Coded and designed by--");

        jLabel14.setFont(new java.awt.Font("Rage Italic", 1, 24)); // NOI18N
        jLabel14.setText("Bhavesh Bhanusali");

        jLabel19.setFont(new java.awt.Font("Rage Italic", 1, 24)); // NOI18N
        jLabel19.setText("Contact:- ");

        jLabel20.setFont(new java.awt.Font("Rage Italic", 1, 24)); // NOI18N
        jLabel20.setText("7000943185");

        javax.swing.GroupLayout AboutDialogLayout = new javax.swing.GroupLayout(AboutDialog.getContentPane());
        AboutDialog.getContentPane().setLayout(AboutDialogLayout);
        AboutDialogLayout.setHorizontalGroup(
            AboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutDialogLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(AboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutDialogLayout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        AboutDialogLayout.setVerticalGroup(
            AboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutDialogLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel13)
                .addGap(35, 35, 35)
                .addComponent(jLabel14)
                .addGap(30, 30, 30)
                .addGroup(AboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Menu");
        setLocation(new java.awt.Point(450, 125));
        setResizable(false);

        LogOutBtn.setText("Log out");
        LogOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutBtnActionPerformed(evt);
            }
        });

        RegisteredStudentsBtn.setFont(new java.awt.Font("Perpetua Titling MT", 3, 24)); // NOI18N
        RegisteredStudentsBtn.setText("Registered Students");
        RegisteredStudentsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisteredStudentsBtnActionPerformed(evt);
            }
        });

        EventLogBtn.setFont(new java.awt.Font("Perpetua Titling MT", 3, 24)); // NOI18N
        EventLogBtn.setText("Event Log");
        EventLogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventLogBtnActionPerformed(evt);
            }
        });

        jLabel12.setText("Logged in as-");

        SettingsBtn.setFont(new java.awt.Font("Perpetua Titling MT", 3, 24)); // NOI18N
        SettingsBtn.setText("Settings");
        SettingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SettingsBtnActionPerformed(evt);
            }
        });

        IssuesBtn.setFont(new java.awt.Font("Perpetua Titling MT", 3, 24)); // NOI18N
        IssuesBtn.setText("Issues");
        IssuesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssuesBtnActionPerformed(evt);
            }
        });

        AllBooksBtn.setFont(new java.awt.Font("Perpetua Titling MT", 3, 24)); // NOI18N
        AllBooksBtn.setText("All Books");
        AllBooksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllBooksBtnActionPerformed(evt);
            }
        });

        UserNameDisplayLbl.setForeground(java.awt.Color.red);
        UserNameDisplayLbl.setText("Admin");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("SMART LIBRARY MANAGEMENT");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IssuesBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AllBooksBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RegisteredStudentsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EventLogBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SettingsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UserNameDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LogOutBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(IssuesBtn)
                .addGap(18, 18, 18)
                .addComponent(AllBooksBtn)
                .addGap(18, 18, 18)
                .addComponent(RegisteredStudentsBtn)
                .addGap(18, 18, 18)
                .addComponent(EventLogBtn)
                .addGap(18, 18, 18)
                .addComponent(SettingsBtn)
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(UserNameDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogOutBtn))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void AddAccountDialogrefresh(){
    boolean key1 = false;
    boolean key2 = false;
    boolean key3 = false;
    boolean key4 = false;
    boolean key5 = false;
    {
        String inp = nameTF.getText();
        if(inp.length()>45){
            inp = inp.substring(0,45);
            nameTF.setText(inp);
        }
        boolean pass = false;
        for(int i=0 ; i<inp.length() ; i++)
            if((int)inp.charAt(i)!=32)
                pass = true;
        if(pass){
        nameTF.setBackground(Color.white);
        key1 = true;
    }
        else{
        nameTF.setBackground(Color.pink);
        }
        }
    {
        String inp = unameTF.getText();
        if(inp.length()>45){
            inp = inp.substring(0,45);
            unameTF.setText(inp);
        }
        boolean pass = false;
        for(int i=0 ; i<inp.length() ; i++)
            if((int)inp.charAt(i)!=32)
                pass = true;
        if(pass){
            inp = Newlibrarymanagementsystem.MysqlEscapeSeq(inp);
        String query = "SELECT * FROM accounts WHERE uname = \'"+inp+"\' ;" ;
    try{
    Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/newlibman";
            Connection c=DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) c.createStatement();
    ResultSet rs = stmt.executeQuery(query);
if(rs.next())
    unameTF.setBackground(Color.orange);
else {
unameTF.setBackground(Color.white);
key2 = true;
}
rs.close();
    stmt.close();
    c.close();
    }
    catch(Exception e){
        System.out.println(e);
    }
        }
        else{
        unameTF.setBackground(Color.pink);
        }
        }
    {
        String inp = secansTF.getText();
        if(inp.length()>100){
            inp = inp.substring(0,100);
            secansTF.setText(inp);
        }
        boolean pass = false;
        for(int i=0 ; i<inp.length() ; i++)
            if((int)inp.charAt(i)!=32)
                pass = true;
        if(pass){
        secansTF.setBackground(Color.white);
        key3 = true;
    }
        else{
        secansTF.setBackground(Color.pink);
        }
        }
    {
        String inp = secqCB.getSelectedItem().toString();
        if(inp.length()>100){
secqCB.setFont(secqCBfont);
        }
        else{
        boolean pass = false;
        for(int i=0 ; i<inp.length() ; i++)
            if((int)inp.charAt(i)!=32)
                pass = true;
        if(pass){
        secqCB.setFont(normalfont);
        key4 = true;
    }
        else{
        secqCB.setFont(secqCBfont);
        }
    }
        }
    {
    String inp1 = new String(pwdPF.getPassword());
    String inp2 = new String(cpwdPF.getPassword());
    if(inp1.equals("") || inp1.length()>45){
    pwdPF.setBackground(Color.pink);
    cpwdPF.setBackground(Color.pink);
    }
    else{
        if(inp1.equals(inp2)){
    pwdPF.setBackground(Color.white);
    cpwdPF.setBackground(Color.white);
    key5 = true;
        }
        else{
        pwdPF.setBackground(Color.pink);
    cpwdPF.setBackground(Color.pink);
        }
    }
    }
    
    if(key1 && key2 && key3 && key4 && key5)
            AddAccountDoneBtn.setEnabled(true);
        else AddAccountDoneBtn.setEnabled(false);
    }
    
    public void ChangePasswordDialogrefresh(){
    boolean key1 = false;
    boolean key2 = false;
    boolean key3 = false;
    boolean key4 = false;
    
    {
    String inp = new String(opwdPF.getPassword());
    if(inp.equals("") || inp.length()>45)
        opwdPF.setBackground(Color.pink);
    else {
    opwdPF.setBackground(Color.white);
    key1 = true;
    }
    }
    {
    String inp1 = new String(npwdPF.getPassword());
    String inp2 = new String(cnpwdPF.getPassword());
    if(inp1.equals("") || inp1.length()>45){
    npwdPF.setBackground(Color.pink);
    cnpwdPF.setBackground(Color.pink);
    }
    else{
        if(inp1.equals(inp2)){
    npwdPF.setBackground(Color.white);
    cnpwdPF.setBackground(Color.white);
    key2 = true;
        }
        else{
        npwdPF.setBackground(Color.pink);
    cnpwdPF.setBackground(Color.pink);
        }
    }
    }
    {
        String inp = nsecansTF.getText();
        if(inp.length()>100){
            inp = inp.substring(0,100);
            nsecansTF.setText(inp);
        }
        boolean pass = false;
        for(int i=0 ; i<inp.length() ; i++)
            if((int)inp.charAt(i)!=32)
                pass = true;
        if(pass){
        nsecansTF.setBackground(Color.white);
        key3 = true;
    }
        else{
        nsecansTF.setBackground(Color.pink);
        }
        }
    {
        String inp = nsecqTF.getText();
        if(inp.length()>100){
            inp = inp.substring(0,100);
            nsecqTF.setText(inp);
        }
        boolean pass = false;
        for(int i=0 ; i<inp.length() ; i++)
            if((int)inp.charAt(i)!=32)
                pass = true;
        if(pass){
        nsecqTF.setBackground(Color.white);
        key4 = true;
    }
        else{
        nsecqTF.setBackground(Color.pink);
        }
        }
    
    if(key1 && key2 && key3 && key4)
            ChangePasswordDoneBtn.setEnabled(true);
        else ChangePasswordDoneBtn.setEnabled(false);
    }
    
   public void bookbtnen(){
    AllBooksBtn.setEnabled(true);
    AllBooksBtn.setToolTipText(null);
    this.requestFocus();
    }
   
   public void studbtnen(){
   RegisteredStudentsBtn.setEnabled(true);
   RegisteredStudentsBtn.setToolTipText(null);
   this.requestFocus();
   }
    
   public void evlbtnen(){
   EventLogBtn.setEnabled(true);
   EventLogBtn.setToolTipText(null);
   this.requestFocus();
   }
   
   public void isfbtnen(){
   IssuesBtn.setEnabled(true);
   IssuesBtn.setToolTipText(null);
   this.requestFocus();
   }
   
    private void SettingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SettingsBtnActionPerformed
        // TODO add your handling code here:
        SettingsDialog.pack();
        SettingsDialog.setVisible(true);
        framesfoclose();
        SettingsDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_SettingsBtnActionPerformed

    private void ClearDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearDataBtnActionPerformed
        // TODO add your handling code here:
        ClearDataDialog.pack();
        ClearDataDialog.setVisible(true);
        SettingsDialog.setAlwaysOnTop(false);
        SettingsDialog.setEnabled(false);
        ClearDataDialog.setAlwaysOnTop(true);
        ClearDataDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_ClearDataBtnActionPerformed

    private void SettingsDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_SettingsDialogWindowClosed
        // TODO add your handling code here:
        framesfocback();
        this.requestFocus();
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_SettingsDialogWindowClosed

    private void ClearDataDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ClearDataDialogWindowOpened
        // TODO add your handling code here:
        OlderThanDC.setDateFormat(new SimpleDateFormat("yyyy-MM-dd"));  
    }//GEN-LAST:event_ClearDataDialogWindowOpened

    private void ClearDataDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ClearDataDialogWindowClosing
        // TODO add your handling code here:
        ClearDataDialogReset();
        ClearDataDialog.setAlwaysOnTop(false);
        SettingsDialog.setEnabled(true);
        SettingsDialog.setAlwaysOnTop(true);
        SettingsDialog.requestFocus();
        SettingsDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_ClearDataDialogWindowClosing

    private void ChangePasswordDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ChangePasswordDialogWindowClosing
        // TODO add your handling code here:
        ChangePasswordDialogReset();
        ChangePasswordDialog.setAlwaysOnTop(false);
        SettingsDialog.setEnabled(true);
        SettingsDialog.setAlwaysOnTop(true);
        SettingsDialog.requestFocus();
        SettingsDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_ChangePasswordDialogWindowClosing

    private void ChangePasswordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePasswordBtnActionPerformed
        // TODO add your handling code here:
        ChangePasswordDialog.pack();
        ChangePasswordDialog.setVisible(true);
        SettingsDialog.setAlwaysOnTop(false);
        SettingsDialog.setEnabled(false);
        ChangePasswordDialog.setAlwaysOnTop(true);
        ChangePasswordDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_ChangePasswordBtnActionPerformed

    private void ManageAccountsDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ManageAccountsDialogWindowClosing
        // TODO add your handling code here:
        ManageAccountsDialogReset();
        ManageAccountsDialog.setAlwaysOnTop(false);
        SettingsDialog.setEnabled(true);
        SettingsDialog.setAlwaysOnTop(true);
        SettingsDialog.requestFocus();
        SettingsDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_ManageAccountsDialogWindowClosing

    private void ManageAccountsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageAccountsBtnActionPerformed
        // TODO add your handling code here:
        ManageAccountsDialog.pack();
        ManageAccountsDialog.setVisible(true);
        SettingsDialog.setAlwaysOnTop(false);
        SettingsDialog.setEnabled(false);
        ManageAccountsDialog.setAlwaysOnTop(true);
        ManageAccountsDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_ManageAccountsBtnActionPerformed

    private void AddAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAccountBtnActionPerformed
        // TODO add your handling code here:
        AddAccountDialog.pack();
        AddAccountDialog.setVisible(true);
        ManageAccountsDialog.setAlwaysOnTop(false);
        ManageAccountsDialog.setEnabled(false);
        AddAccountDialog.setAlwaysOnTop(true);
        AddAccountDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_AddAccountBtnActionPerformed

    private void AddAccountDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_AddAccountDialogWindowClosing
        // TODO add your handling code here:
        AddAccountDialog.setAlwaysOnTop(false);
        ManageAccountsDialog.setEnabled(true);
        ManageAccountsDialog.setAlwaysOnTop(true);
        ManageAccountsDialog.requestFocus();
        ManageAccountsDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_AddAccountDialogWindowClosing

    private void AllBooksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllBooksBtnActionPerformed
        // TODO add your handling code here:
        abfobj = new AllBooksFram(MenuFrame.this);
        abfobj.setVisible(true);
        AllBooksBtn.setToolTipText("Already Open");
        AllBooksBtn.setEnabled(false);
    }//GEN-LAST:event_AllBooksBtnActionPerformed

    private void RegisteredStudentsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisteredStudentsBtnActionPerformed
        // TODO add your handling code here:
        rsfobj = new RegisteredStudentsFrame(MenuFrame.this);
        rsfobj.setVisible(true);
        RegisteredStudentsBtn.setToolTipText("Already Open");
        RegisteredStudentsBtn.setEnabled(false);
    }//GEN-LAST:event_RegisteredStudentsBtnActionPerformed

    private void EventLogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventLogBtnActionPerformed
        // TODO add your handling code here:
        elfobj = new EventLogFrame(MenuFrame.this);
        elfobj.setVisible(true);
        EventLogBtn.setToolTipText("Already Open");
        EventLogBtn.setEnabled(false);
    }//GEN-LAST:event_EventLogBtnActionPerformed

    private void IssuesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssuesBtnActionPerformed
        // TODO add your handling code here:
        isfobj = new IssuesFrame(MenuFrame.this);
        isfobj.setVisible(true);
        IssuesBtn.setToolTipText("Already Open");
        IssuesBtn.setEnabled(false);
    }//GEN-LAST:event_IssuesBtnActionPerformed

    private void ChangePasswordDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ChangePasswordDialogWindowClosed
        // TODO add your handling code here:
        ChangePasswordDialog.setLocation(0,0);
    }//GEN-LAST:event_ChangePasswordDialogWindowClosed

    private void ClearDataDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ClearDataDialogWindowClosed
        // TODO add your handling code here:
        ClearDataDialog.setLocation(0,0);
    }//GEN-LAST:event_ClearDataDialogWindowClosed

    private void ManageAccountsDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ManageAccountsDialogWindowClosed
        // TODO add your handling code here:
        ManageAccountsDialog.setLocation(0,0);
    }//GEN-LAST:event_ManageAccountsDialogWindowClosed

    private void AddAccountDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_AddAccountDialogWindowClosed
        // TODO add your handling code here:
        AddAccountDialogReset();
        AddAccountDialog.setLocation(0,0);
    }//GEN-LAST:event_AddAccountDialogWindowClosed

    private void RemoveAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveAccountBtnActionPerformed
        // TODO add your handling code here:
        ManageAccountsDialog.setAlwaysOnTop(false);
        int choice = JOptionPane.showConfirmDialog(null,"Remove selected account ?");
        if(choice==JOptionPane.YES_OPTION){
        String uname = Newlibrarymanagementsystem.MysqlEscapeSeq(ManageAccountsTbl.getValueAt(ManageAccountsTbl.getSelectedRow(),0).toString());
        
        String query = "UPDATE accounts SET deleted = 'Y' WHERE uname = '"+uname+"' ;" ;
                try{
    Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/newlibman";
            Connection c=DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) c.createStatement();
            stmt.executeUpdate(query);
            MArefresh();
                }
                catch(Exception e){
                    System.out.println(e);
                }
        }
        ManageAccountsDialog.setAlwaysOnTop(true);
    }//GEN-LAST:event_RemoveAccountBtnActionPerformed

    private void ManageAccountsDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ManageAccountsDialogWindowOpened
        // TODO add your handling code here:
        MArefresh();
    }//GEN-LAST:event_ManageAccountsDialogWindowOpened

    private void ManageAccountsTblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ManageAccountsTblMouseReleased
        // TODO add your handling code here:
        if(ManageAccountsTbl.getSelectedRowCount()>0)
            if(ManageAccountsTbl.getValueAt(ManageAccountsTbl.getSelectedRow(),0).toString().equals("Admin") || ManageAccountsTbl.getValueAt(ManageAccountsTbl.getSelectedRow(),2).toString().equals("Y"))
            RemoveAccountBtn.setEnabled(false);
            else RemoveAccountBtn.setEnabled(true);
        else RemoveAccountBtn.setEnabled(false);
    }//GEN-LAST:event_ManageAccountsTblMouseReleased

    private void DCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DCheckItemStateChanged
        // TODO add your handling code here:
        MArefresh();
    }//GEN-LAST:event_DCheckItemStateChanged

    private void nameTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_nameTFCaretUpdate
        // TODO add your handling code here:
        nameLbl.setText(nameTF.getText().length()+"/45");
    }//GEN-LAST:event_nameTFCaretUpdate

    private void unameTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_unameTFCaretUpdate
        // TODO add your handling code here:
        unameLbl.setText(unameTF.getText().length()+"/45");
    }//GEN-LAST:event_unameTFCaretUpdate

    private void pwdPFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_pwdPFCaretUpdate
        // TODO add your handling code here:
        pwdLbl.setText(pwdPF.getPassword().length+"/45");
    }//GEN-LAST:event_pwdPFCaretUpdate

    private void cpwdPFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_cpwdPFCaretUpdate
        // TODO add your handling code here:
        cpwdLbl.setText(cpwdPF.getPassword().length+"/45");
    }//GEN-LAST:event_cpwdPFCaretUpdate

    private void secqCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_secqCBItemStateChanged
        // TODO add your handling code here:
        AddAccountDialogrefresh();
        secqLbl.setText(secqCB.getSelectedItem().toString().length()+"/100");
    }//GEN-LAST:event_secqCBItemStateChanged

    private void secansTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_secansTFCaretUpdate
        // TODO add your handling code here:
        secansLbl.setText(secansTF.getText().length()+"/45");
    }//GEN-LAST:event_secansTFCaretUpdate

    private void nameTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTFKeyReleased
        // TODO add your handling code here:
        AddAccountDialogrefresh();
    }//GEN-LAST:event_nameTFKeyReleased

    private void unameTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unameTFKeyReleased
        // TODO add your handling code here:
        AddAccountDialogrefresh();
    }//GEN-LAST:event_unameTFKeyReleased

    private void pwdPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwdPFKeyReleased
        // TODO add your handling code here:
        AddAccountDialogrefresh();
    }//GEN-LAST:event_pwdPFKeyReleased

    private void cpwdPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpwdPFKeyReleased
        // TODO add your handling code here:
        AddAccountDialogrefresh();
    }//GEN-LAST:event_cpwdPFKeyReleased

    private void secansTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secansTFKeyReleased
        // TODO add your handling code here:
        AddAccountDialogrefresh();
    }//GEN-LAST:event_secansTFKeyReleased

    private void opwdPFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_opwdPFCaretUpdate
        // TODO add your handling code here:
        opwdLbl.setText(opwdPF.getPassword().length+"/45");
    }//GEN-LAST:event_opwdPFCaretUpdate

    private void npwdPFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_npwdPFCaretUpdate
        // TODO add your handling code here:
        npwdLbl.setText(npwdPF.getPassword().length+"/45");
    }//GEN-LAST:event_npwdPFCaretUpdate

    private void cnpwdPFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_cnpwdPFCaretUpdate
        // TODO add your handling code here:
        cnpwdLbl.setText(cnpwdPF.getPassword().length+"/45");
    }//GEN-LAST:event_cnpwdPFCaretUpdate

    private void opwdPFKeyAll(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opwdPFKeyAll
        // TODO add your handling code here:
        ChangePasswordDialogrefresh();
    }//GEN-LAST:event_opwdPFKeyAll

    private void npwdPFKeyAll(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npwdPFKeyAll
        // TODO add your handling code here:
        ChangePasswordDialogrefresh();
    }//GEN-LAST:event_npwdPFKeyAll

    private void cnpwdPFKeyAll(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnpwdPFKeyAll
        // TODO add your handling code here:
        ChangePasswordDialogrefresh();
    }//GEN-LAST:event_cnpwdPFKeyAll

    private void nsecansTFKeyAll(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nsecansTFKeyAll
        // TODO add your handling code here:
        ChangePasswordDialogrefresh();
    }//GEN-LAST:event_nsecansTFKeyAll

    private void nsecansTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_nsecansTFCaretUpdate
        // TODO add your handling code here:
        nsecansLbl.setText(nsecansTF.getText().length()+"/100");
    }//GEN-LAST:event_nsecansTFCaretUpdate

    private void nsecqTFKeyAll(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nsecqTFKeyAll
        // TODO add your handling code here:
        ChangePasswordDialogrefresh();
    }//GEN-LAST:event_nsecqTFKeyAll

    private void nsecqTFCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_nsecqTFCaretUpdate
        // TODO add your handling code here:
        nsecqLbl.setText(nsecqTF.getText().length()+"/100");
    }//GEN-LAST:event_nsecqTFCaretUpdate

    private void LogOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        MenuFrame.main(new String[0]);
    }//GEN-LAST:event_LogOutBtnActionPerformed

    private void AddAccountDoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAccountDoneBtnActionPerformed
        // TODO add your handling code here:
        String uname = Newlibrarymanagementsystem.MysqlEscapeSeq(unameTF.getText());
        String name = Newlibrarymanagementsystem.MysqlEscapeSeq(nameTF.getText());
        String secans = Newlibrarymanagementsystem.MysqlEscapeSeq(secansTF.getText());
        String secq = Newlibrarymanagementsystem.MysqlEscapeSeq(secqCB.getSelectedItem().toString());
        String pwd = Newlibrarymanagementsystem.MysqlEscapeSeq(new String(pwdPF.getPassword()));
        
        String query = "INSERT INTO accounts VALUES ('"+uname+"','"+name+"','"+pwd+"','"+secq+"','"+secans+"','N') ;" ;
        try{
    Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/newlibman";
            Connection c=DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) c.createStatement();
            stmt.executeUpdate(query);
            stmt.close();
            c.close();
            AddAccountDialog.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(null,"Account added");
            AddAccountDialog.setAlwaysOnTop(true);
        }
        catch(Exception e){
            System.out.println(e);
        }
        AddAccountDialog.dispatchEvent(new WindowEvent(AddAccountDialog, WindowEvent.WINDOW_CLOSING));
        MArefresh();
    }//GEN-LAST:event_AddAccountDoneBtnActionPerformed

    private void ChangePasswordDoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePasswordDoneBtnActionPerformed
        // TODO add your handling code here:
        ChangePasswordDialog.setAlwaysOnTop(false);
        String opwd = Newlibrarymanagementsystem.MysqlEscapeSeq(new String(opwdPF.getPassword()));
        String uname = Newlibrarymanagementsystem.MysqlEscapeSeq(LoggedInUserName);
        
        String query = "SELECT * FROM accounts WHERE uname = '"+uname+"' AND pwd = '"+opwd+"' ;" ;
        try{
    Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/newlibman";
            Connection c=DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) c.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            if(rs.next()){
            String npwd = Newlibrarymanagementsystem.MysqlEscapeSeq(new String(npwdPF.getPassword()));
            String nsecq = Newlibrarymanagementsystem.MysqlEscapeSeq(nsecqTF.getText());
            String nsecans = Newlibrarymanagementsystem.MysqlEscapeSeq(nsecansTF.getText());
            
            query = "UPDATE accounts SET pwd = '"+npwd+"', secq = '"+nsecq+"', secans = '"+nsecans+"' WHERE uname = '"+uname+"' ;" ;
            stmt= (com.mysql.jdbc.Statement) c.createStatement();
            stmt.executeUpdate(query);
            rs.close();
            stmt.close();
            c.close();
            JOptionPane.showMessageDialog(null,"Account info changed");
            ChangePasswordDialog.dispatchEvent(new WindowEvent(ChangePasswordDialog, WindowEvent.WINDOW_CLOSING));
            }
            else JOptionPane.showMessageDialog(null,"Incorrect current password");
        }
        catch(Exception e){
            System.out.println(e);
        }
        ChangePasswordDialog.setAlwaysOnTop(true);
    }//GEN-LAST:event_ChangePasswordDoneBtnActionPerformed

    private void ClearDataDoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearDataDoneBtnActionPerformed
        // TODO add your handling code here:
        ClearDataDialog.setAlwaysOnTop(false);
        int choice = JOptionPane.showConfirmDialog(null,"Are you sure");
        if(choice==JOptionPane.YES_OPTION){
        String odate = OlderThanDC.getText();
        boolean b = AllInactiveLogsRB.isSelected();
        boolean d = ResetDatabaseRB.isSelected();
        
        String query = "DELETE FROM evl WHERE DATE(octime) < '"+odate+"' ;" ;
         try{
    Class.forName("com.mysql.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/newlibman";
            Connection con =DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            
            if(b){
            query = "DELETE FROM bookaddlog WHERE addon < '"+odate+"' ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM bookremlog WHERE remon < '"+odate+"' ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM returnlog WHERE ron < '"+odate+"' ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM issuelog WHERE ion < '"+odate+"' AND NOT period = null ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            }
            
            if(d){
            query = "DELETE FROM issues ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM books ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM bookaddlog ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM bookremlog ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM issuelog ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM returnlog ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM evl ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM students ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "DELETE FROM accounts ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            query = "INSERT INTO accounts VALUES ('Admin','Admin','123','1 + 1 =','2','N') ;" ;
            stmt= (com.mysql.jdbc.Statement) con.createStatement();
            stmt.executeUpdate(query);
            }
            stmt.close();
            con.close();
         }
         catch(Exception e){
             System.out.println(e);
         }
         System.exit(0);
        }
        
    }//GEN-LAST:event_ClearDataDoneBtnActionPerformed

    private void ResetDatabaseRBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ResetDatabaseRBItemStateChanged
        // TODO add your handling code here:
        if(ResetDatabaseRB.isSelected())
            OlderThanDC.setEnabled(false);
        else OlderThanDC.setEnabled(true);
    }//GEN-LAST:event_ResetDatabaseRBItemStateChanged

    private void AllInactiveLogsRBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AllInactiveLogsRBItemStateChanged
        // TODO add your handling code here:
        if(ResetDatabaseRB.isSelected())
            OlderThanDC.setEnabled(false);
        else OlderThanDC.setEnabled(true);
    }//GEN-LAST:event_AllInactiveLogsRBItemStateChanged

    private void EventLogRBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_EventLogRBItemStateChanged
        // TODO add your handling code here:
        if(ResetDatabaseRB.isSelected())
            OlderThanDC.setEnabled(false);
        else OlderThanDC.setEnabled(true);
    }//GEN-LAST:event_EventLogRBItemStateChanged

    private void AboutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutBtnActionPerformed
        // TODO add your handling code here:
        SettingsDialog.setAlwaysOnTop(false);
        AboutDialog.pack();
        AboutDialog.setLocationRelativeTo(null);
        AboutDialog.setVisible(true);
    }//GEN-LAST:event_AboutBtnActionPerformed

    private void AboutDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_AboutDialogWindowClosing
        // TODO add your handling code here:
        SettingsDialog.setAlwaysOnTop(true);
    }//GEN-LAST:event_AboutDialogWindowClosing

    private void SettingsDialogWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_SettingsDialogWindowOpened
        // TODO add your handling code here:
        if(LoggedInUserName.equals("Admin")){}
        else{
        ManageAccountsBtn.setEnabled(false);
        ClearDataBtn.setEnabled(false);
        }
    }//GEN-LAST:event_SettingsDialogWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutBtn;
    private javax.swing.JDialog AboutDialog;
    private javax.swing.JButton AddAccountBtn;
    private javax.swing.JDialog AddAccountDialog;
    private javax.swing.JButton AddAccountDoneBtn;
    private javax.swing.JButton AllBooksBtn;
    private javax.swing.JRadioButton AllInactiveLogsRB;
    private javax.swing.JButton ChangePasswordBtn;
    private javax.swing.JDialog ChangePasswordDialog;
    private javax.swing.JButton ChangePasswordDoneBtn;
    private javax.swing.JButton ClearDataBtn;
    private javax.swing.ButtonGroup ClearDataButtonGrp;
    private javax.swing.JDialog ClearDataDialog;
    private javax.swing.JButton ClearDataDoneBtn;
    private javax.swing.JCheckBox DCheck;
    private javax.swing.JButton EventLogBtn;
    private javax.swing.JRadioButton EventLogRB;
    private javax.swing.JButton IssuesBtn;
    private javax.swing.JButton LogOutBtn;
    private javax.swing.JButton ManageAccountsBtn;
    private javax.swing.JDialog ManageAccountsDialog;
    private javax.swing.JTable ManageAccountsTbl;
    private datechooser.beans.DateChooserCombo OlderThanDC;
    private javax.swing.JButton RegisteredStudentsBtn;
    private javax.swing.JButton RemoveAccountBtn;
    private javax.swing.JRadioButton ResetDatabaseRB;
    private javax.swing.JLabel SampLbl;
    private javax.swing.JButton SettingsBtn;
    private javax.swing.JDialog SettingsDialog;
    private javax.swing.JLabel UserNameDisplayLbl;
    private javax.swing.JLabel cnpwdLbl;
    private javax.swing.JPasswordField cnpwdPF;
    private javax.swing.JLabel cpwdLbl;
    private javax.swing.JPasswordField cpwdPF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTF;
    private javax.swing.JLabel npwdLbl;
    private javax.swing.JPasswordField npwdPF;
    private javax.swing.JLabel nsecansLbl;
    private javax.swing.JTextField nsecansTF;
    private javax.swing.JLabel nsecqLbl;
    private javax.swing.JTextField nsecqTF;
    private javax.swing.JLabel opwdLbl;
    private javax.swing.JPasswordField opwdPF;
    private javax.swing.JLabel pwdLbl;
    private javax.swing.JPasswordField pwdPF;
    private javax.swing.JLabel secansLbl;
    private javax.swing.JTextField secansTF;
    private javax.swing.JComboBox secqCB;
    private javax.swing.JLabel secqLbl;
    private javax.swing.JLabel unameLbl;
    private javax.swing.JTextField unameTF;
    // End of variables declaration//GEN-END:variables
}
