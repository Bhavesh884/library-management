/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newlibrarymanagementsystem;

import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhavesh
 */
public class IssuesFrame extends javax.swing.JFrame {

    MenuFrame mnfobj;
    IssueLogFrame ilfobj;

public void issuelogsrefresh(){
if(ilfobj!=null){
    ilfobj.Irefresh();
    ilfobj.Rrefresh();
}
}
    
public void foclose(){
this.setEnabled(false);
if(ilfobj!=null)
    ilfobj.setEnabled(false);
}
public void focback(){
this.setEnabled(true);
if(ilfobj!=null)
    ilfobj.setEnabled(true);
}

public void framesfocloseref(){
mnfobj.framesfoclose();
}
public void framesfocbackref(){
mnfobj.framesfocback();
}
    /**
     * Creates new form IssuesFrame
     */
    public IssuesFrame(MenuFrame mnfobj) {
        initComponents();
        this.mnfobj = mnfobj;
        this.setLocationRelativeTo(null);
    }
    
    public String CBIndexToColName(int i){
        String colname=null;
    switch(i){
        case 0: colname = "CONV(iid,10,27)";
        break;
        case 1: colname = "CONV(bid,10,26)";
        break;
        case 2: colname = "rno";
        break;
        case 3: colname = "gender";
        break;
        case 4: colname = "price";
        break;
        case 5: colname = "DATEDIFF(CURDATE(),ion)";
        break;
        case 6: colname = "bname";
        break;
        case 7: colname = "pages";
        break;
        case 8: colname = "isto";
        break;
        case 9: colname = "CONV(sid,10,18)";
        break;
    }
    return colname;
    }
    
    public void refresh(){
        ReturnBookBtn.setEnabled(false);
    String sfield1 = CBIndexToColName(SearchFieldCB1.getSelectedIndex());
    String sfield2 = CBIndexToColName(SearchFieldCB2.getSelectedIndex());
    String sfield3 = CBIndexToColName(SearchFieldCB3.getSelectedIndex());
    String scrit1 = (String)SearchCritCB1.getSelectedItem();
    String scrit2 = (String)SearchCritCB2.getSelectedItem();
    String scrit3 = (String)SearchCritCB3.getSelectedItem();
    String search1 = Newlibrarymanagementsystem.MysqlEscapeSeq(SearchTF1.getText());
    String search2 = Newlibrarymanagementsystem.MysqlEscapeSeq(SearchTF2.getText());
    String search3 = Newlibrarymanagementsystem.MysqlEscapeSeq(SearchTF3.getText());
    
    boolean inv1 = NOTCheck1.isSelected();
    boolean inv2 = NOTCheck2.isSelected();
    boolean inv3 = NOTCheck3.isSelected();
    String sorter = CBIndexToColName(SortCB.getSelectedIndex());
    if(sorter.equals("CONV(sid,10,18)"))
        sorter = "sid" ;
    if(sorter.equals("CONV(bid,10,26)"))
        sorter = "bid" ;
    if(sorter.equals("CONV(iid,10,27)"))
        sorter = "iid" ;
    boolean sortdesc = SortDescCheck.isSelected();
    String query = "SELECT CONV(iid,10,27),CONV(bid,10,26),rno,gender,price,DATEDIFF(CURDATE(),ion),bname,pages,isto,CONV(sid,10,18) FROM issues WHERE "+(inv1 ? "NOT " : "")+sfield1+" "+(scrit1.length()==1 ? scrit1 : "LIKE")+" \'"+(scrit1=="ends with" || scrit1=="includes" ? "%" : "")+search1+(scrit1=="starts with" || scrit1=="includes" ? "%" : "")+"\' AND "+(inv2 ? "NOT " : "")+sfield2+" "+(scrit2.length()==1 ? scrit2 : "LIKE")+" \'"+(scrit2=="ends with" || scrit2=="includes" ? "%" : "")+search2+(scrit2=="starts with" || scrit2=="includes" ? "%" : "")+"\' AND "+(inv3 ? "NOT " : "")+sfield3+" "+(scrit3.length()==1 ? scrit3 : "LIKE")+" \'"+(scrit3=="ends with" || scrit3=="includes" ? "%" : "")+search3+(scrit3=="starts with" || scrit3=="includes" ? "%" : "")+"\' ORDER BY "+sorter+(sortdesc ? " DESC " : " ")+";" ;
    DefaultTableModel model = (DefaultTableModel)Tbl.getModel();
    int rows = model.getRowCount();
    if(rows!=0)
        for(int i=0 ; i<rows ; i++)
            model.removeRow(0);
    try{
    Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/newlibman";
            Connection c=DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) c.createStatement();
    ResultSet rs = stmt.executeQuery(query);
    Object[] tuple = new Object[10];
    while(rs.next()){
    for(int i=1 ; i<=10; i++)
    tuple[i-1] = rs.getObject(i);
    model.addRow(tuple);
    }
    rs.close();
    stmt.close();
    c.close();
    }
    catch(Exception e){
        System.out.println(e);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        ReturnBookBtn = new javax.swing.JButton();
        SortDescCheck = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SearchFieldCB1 = new javax.swing.JComboBox<>();
        SearchTF1 = new javax.swing.JTextField();
        SearchCritCB1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SearchFieldCB3 = new javax.swing.JComboBox<>();
        SearchCritCB3 = new javax.swing.JComboBox<>();
        SearchTF3 = new javax.swing.JTextField();
        SearchFieldCB2 = new javax.swing.JComboBox<>();
        SearchCritCB2 = new javax.swing.JComboBox<>();
        SearchTF2 = new javax.swing.JTextField();
        NOTCheck1 = new javax.swing.JCheckBox();
        NOTCheck2 = new javax.swing.JCheckBox();
        NOTCheck3 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        SortCB = new javax.swing.JComboBox<>();
        ViewLogBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Issues");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        ReturnBookBtn.setText("Return Book");
        ReturnBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnBookBtnActionPerformed(evt);
            }
        });

        SortDescCheck.setSelected(true);
        SortDescCheck.setText("in descending order");
        SortDescCheck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SortDescCheckItemStateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search criteria", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("1");

        SearchFieldCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Issue Id.", "Book Id.", "Roll no.", "Gender", "Price", "Days ago", "Book name", "Pages", "Issued to", "Student Id." }));
        SearchFieldCB1.setSelectedItem("Issued to");
        SearchFieldCB1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SearchFieldCB1ItemStateChanged(evt);
            }
        });

        SearchTF1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SearchTF1CaretUpdate(evt);
            }
        });

        SearchCritCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", "<", ">", "starts with", "ends with", "includes" }));
        SearchCritCB1.setSelectedItem("starts with");
        SearchCritCB1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SearchCritCB1ItemStateChanged(evt);
            }
        });

        jLabel2.setText("2");

        jLabel3.setText("3");

        SearchFieldCB3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Issue Id.", "Book Id.", "Roll no.", "Gender", "Price", "Days ago", "Book name", "Pages", "Issued to", "Student Id." }));
        SearchFieldCB3.setSelectedItem("Book Id.");
        SearchFieldCB3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SearchFieldCB3ItemStateChanged(evt);
            }
        });

        SearchCritCB3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", "<", ">", "starts with", "ends with", "includes" }));
        SearchCritCB3.setSelectedItem("starts with");
        SearchCritCB3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SearchCritCB3ItemStateChanged(evt);
            }
        });

        SearchTF3.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SearchTF3CaretUpdate(evt);
            }
        });

        SearchFieldCB2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Issue Id.", "Book Id.", "Roll no.", "Gender", "Price", "Days ago", "Book name", "Pages", "Issued to", "Student Id." }));
        SearchFieldCB2.setSelectedItem("Book name");
        SearchFieldCB2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SearchFieldCB2ItemStateChanged(evt);
            }
        });

        SearchCritCB2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", "<", ">", "starts with", "ends with", "includes" }));
        SearchCritCB2.setSelectedItem("starts with");
        SearchCritCB2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SearchCritCB2ItemStateChanged(evt);
            }
        });

        SearchTF2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SearchTF2CaretUpdate(evt);
            }
        });

        NOTCheck1.setText("NOT");
        NOTCheck1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NOTCheck1ItemStateChanged(evt);
            }
        });

        NOTCheck2.setText("NOT");
        NOTCheck2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NOTCheck2ItemStateChanged(evt);
            }
        });

        NOTCheck3.setText("NOT");
        NOTCheck3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NOTCheck3ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchFieldCB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(NOTCheck3)
                        .addGap(18, 18, 18)
                        .addComponent(SearchCritCB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchFieldCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NOTCheck1)
                        .addGap(18, 18, 18)
                        .addComponent(SearchCritCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchFieldCB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NOTCheck2)
                        .addGap(18, 18, 18)
                        .addComponent(SearchCritCB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchTF3, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addComponent(SearchTF2)
                    .addComponent(SearchTF1)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(SearchFieldCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SearchTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SearchCritCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NOTCheck1)))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(SearchFieldCB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SearchTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SearchCritCB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NOTCheck2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SearchFieldCB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SearchTF3)
                                .addComponent(SearchCritCB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NOTCheck3)
                        .addContainerGap())))
        );

        jLabel4.setText("Sort by");

        SortCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Issue Id.", "Book Id.", "Roll no.", "Gender", "Price", "Days ago", "Book name", "Pages", "Issued to", "Student Id." }));
        SortCB.setSelectedItem("Days ago");
        SortCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SortCBItemStateChanged(evt);
            }
        });

        ViewLogBtn.setText("View log");
        ViewLogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewLogBtnActionPerformed(evt);
            }
        });

        Tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Issue Id.", "Book Id.", "Roll No.", "Gender", "Price", "Days ago", "Book name", "Pages", "Issued to", "Student Id."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Tbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Tbl.getTableHeader().setReorderingAllowed(false);
        Tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TblMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Tbl);
        if (Tbl.getColumnModel().getColumnCount() > 0) {
            Tbl.getColumnModel().getColumn(0).setPreferredWidth(60);
            Tbl.getColumnModel().getColumn(4).setPreferredWidth(80);
            Tbl.getColumnModel().getColumn(6).setPreferredWidth(400);
            Tbl.getColumnModel().getColumn(8).setPreferredWidth(360);
        }
        Tbl.setCellSelectionEnabled(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SortCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ReturnBookBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SortDescCheck)
                            .addComponent(ViewLogBtn))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SortCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(SortDescCheck))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ReturnBookBtn)
                            .addComponent(ViewLogBtn)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void islogbtnen(){
    ViewLogBtn.setEnabled(true);
    ViewLogBtn.setToolTipText(null);
    this.requestFocus();
    }
    
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        mnfobj.isfbtnen();
    }//GEN-LAST:event_formWindowClosed

    private void ViewLogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewLogBtnActionPerformed
        // TODO add your handling code here:
        ilfobj = new IssueLogFrame(IssuesFrame.this);
        ilfobj.setVisible(true);
        ViewLogBtn.setToolTipText("Already open");
        ViewLogBtn.setEnabled(false);
    }//GEN-LAST:event_ViewLogBtnActionPerformed

    private void TblMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblMouseReleased
        // TODO add your handling code here:
        if(Tbl.getSelectedRowCount()>0)
            ReturnBookBtn.setEnabled(true);
        else ReturnBookBtn.setEnabled(false);
    }//GEN-LAST:event_TblMouseReleased

    private void SortDescCheckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SortDescCheckItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SortDescCheckItemStateChanged

    private void SortCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SortCBItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SortCBItemStateChanged

    private void SearchTF1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SearchTF1CaretUpdate
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchTF1CaretUpdate

    private void SearchTF2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SearchTF2CaretUpdate
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchTF2CaretUpdate

    private void SearchTF3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SearchTF3CaretUpdate
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchTF3CaretUpdate

    private void SearchCritCB1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SearchCritCB1ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchCritCB1ItemStateChanged

    private void SearchCritCB2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SearchCritCB2ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchCritCB2ItemStateChanged

    private void SearchCritCB3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SearchCritCB3ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchCritCB3ItemStateChanged

    private void NOTCheck1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NOTCheck1ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_NOTCheck1ItemStateChanged

    private void NOTCheck2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NOTCheck2ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_NOTCheck2ItemStateChanged

    private void NOTCheck3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NOTCheck3ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_NOTCheck3ItemStateChanged

    private void SearchFieldCB1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SearchFieldCB1ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchFieldCB1ItemStateChanged

    private void SearchFieldCB2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SearchFieldCB2ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchFieldCB2ItemStateChanged

    private void SearchFieldCB3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SearchFieldCB3ItemStateChanged
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_SearchFieldCB3ItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(ilfobj!=null)
        ilfobj.dispose();
    }//GEN-LAST:event_formWindowClosing

    public String exfreetoString(Object obj){
    if(obj!=null)
        return obj.toString();
    else return "" ;
    }
    
    private void ReturnBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBookBtnActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(null,"Return selected book ?");
        if(choice==JOptionPane.YES_OPTION){
        String iid = Tbl.getValueAt(Tbl.getSelectedRow(),0).toString();
        iid = ""+Integer.parseInt(iid,27);
        String query = "SELECT * FROM issuelog WHERE iid = '"+iid+"' ;" ;
        try{
    Class.forName("com.mysql.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/newlibman";
            Connection c=DriverManager.getConnection(url,"root","123");
            com.mysql.jdbc.Statement stmt= (com.mysql.jdbc.Statement) c.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            rs.next();
            
            String ion = rs.getObject(1).toString();
            String bid = rs.getObject(3).toString();
            String rno = exfreetoString(rs.getObject(4));
            String price = exfreetoString(rs.getObject(5));
            String reto = Newlibrarymanagementsystem.MysqlEscapeSeq(mnfobj.LoggedInUserName);
            String bname = Newlibrarymanagementsystem.MysqlEscapeSeq(rs.getObject(8).toString());
            String pages = rs.getObject(9).toString();
            String reby = Newlibrarymanagementsystem.MysqlEscapeSeq(rs.getObject(10).toString());
            String sid = exfreetoString(rs.getObject(11));
            String pubname = Newlibrarymanagementsystem.MysqlEscapeSeq(rs.getObject(12).toString());
            String writname = Newlibrarymanagementsystem.MysqlEscapeSeq(rs.getObject(13).toString());
            String edition = Newlibrarymanagementsystem.MysqlEscapeSeq(rs.getObject(14).toString());
            String source = Newlibrarymanagementsystem.MysqlEscapeSeq(rs.getObject(15).toString());
            String fname = exfreetoString(rs.getObject(17));
            String cno = exfreetoString(rs.getObject(18));
            String address = Newlibrarymanagementsystem.MysqlEscapeSeq(exfreetoString(rs.getObject(19)));
            String gender = exfreetoString(exfreetoString(rs.getObject(20)));
            String addon = rs.getObject(21).toString();
            
            query = "INSERT INTO returnlog (bid,rno,price,ron,bname,pages,reby,sid,gender,iid,reto,period,pubname,writname,edition,source,avail,fname,cno,address,addon) VALUES ("+bid+","+(rno.equals("") ? "null" : "'"+rno+"'")+","+(price.equals("") ? "null" : price)+",CURDATE(),'"+bname+"',"+pages+",'"+reby+"',"+(sid.equals("") ? "null" : sid)+",'"+gender+"',"+iid+",'"+reto+"',DATEDIFF(CURDATE(),'"+ion+"'),'"+pubname+"','"+writname+"','"+edition+"','"+source+"','Y',"+(fname.equals("") ? "null" : "'"+fname+"'")+","+(cno.equals("") ? "null" : cno)+","+(address.equals("") ? "null" : "'"+address+"'")+",'"+addon+"') ;" ;
            stmt.executeUpdate(query);
            stmt= (com.mysql.jdbc.Statement) c.createStatement();
            query = "DELETE FROM issues WHERE iid = '"+iid+"' ;" ;
            stmt.executeUpdate(query);
            stmt= (com.mysql.jdbc.Statement) c.createStatement();
            query = "UPDATE issuelog SET period = DATEDIFF(CURDATE(),ion) WHERE iid = '"+iid+"' ;" ;
            stmt.executeUpdate(query);
            stmt= (com.mysql.jdbc.Statement) c.createStatement();
            query = "UPDATE books SET issued = 'N' WHERE bid = '"+bid+"' ;" ;
            stmt.executeUpdate(query);
            stmt= (com.mysql.jdbc.Statement) c.createStatement();
            query = "INSERT INTO evl VALUES(NOW(),'Book "+Integer.toString(Integer.parseInt(bid),26).toUpperCase()+" returned"+(rno.equals("") ? "" : " by "+rno+" ")+". Name- "+bname+"','"+reto+"') ;" ;
            stmt.executeUpdate(query);
            rs.close();
            stmt.close();
            c.close();
        }
        catch(Exception e){
            System.out.println(e);
        }
        
        refresh();
        mnfobj.booksrefresh();
        mnfobj.evlrefresh();
        }
    }//GEN-LAST:event_ReturnBookBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssuesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssuesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssuesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssuesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox NOTCheck1;
    private javax.swing.JCheckBox NOTCheck2;
    private javax.swing.JCheckBox NOTCheck3;
    private javax.swing.JButton ReturnBookBtn;
    private javax.swing.JComboBox<String> SearchCritCB1;
    private javax.swing.JComboBox<String> SearchCritCB2;
    private javax.swing.JComboBox<String> SearchCritCB3;
    private javax.swing.JComboBox<String> SearchFieldCB1;
    private javax.swing.JComboBox<String> SearchFieldCB2;
    private javax.swing.JComboBox<String> SearchFieldCB3;
    private javax.swing.JTextField SearchTF1;
    private javax.swing.JTextField SearchTF2;
    private javax.swing.JTextField SearchTF3;
    private javax.swing.JComboBox<String> SortCB;
    private javax.swing.JCheckBox SortDescCheck;
    private javax.swing.JTable Tbl;
    private javax.swing.JButton ViewLogBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
